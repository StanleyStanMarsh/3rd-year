\documentclass[a4paper, final]{article}
%\usepackage{literat} % Нормальные шрифты
\usepackage[14pt]{extsizes} % для того чтобы задать нестандартный 14-ый размер шрифта
\usepackage{cmap}
\usepackage[T2A]{fontenc}
\usepackage[cp1251]{inputenc}
\usepackage[russian]{babel}
\usepackage{amsmath}
\usepackage[left=25mm, top=20mm, right=20mm, bottom=20mm, footskip=10mm]{geometry}
\usepackage{ragged2e} %для растягивания по ширине
\usepackage{setspace} %для межстрочного интервала
\usepackage{moreverb} %для работы с листингами
\usepackage{indentfirst} % для абзацного отступа
\usepackage{moreverb} %для печати в листинге исходного кода программ
\renewcommand\verbatimtabsize{4\relax}
\renewcommand\listingoffset{0.2em} %отступ от номеров строк в листинге
\renewcommand{\arraystretch}{1.4} % изменяю высоту строки в таблице
\usepackage[font=small, singlelinecheck=false, justification=raggedleft, format=plain, labelsep=period]{caption} %для настройки заголовка таблицы
\usepackage{amssymb}
\usepackage{listings} %листинги
\usepackage{xcolor} % цвета
\usepackage{hyperref}% для гиперссылок
\usepackage{enumitem} %для перечислений
\usepackage{float}
\usepackage{graphicx}
\usepackage{multirow}
\usepackage{svg}
\usepackage{pdfpages}

%\makeatletter 
%\@namedef{ver@float.sty}{3000/12/31}
%\makeatother

\usepackage{minted}
%\usemintedstyle{vs}
\definecolor{LightGray}{gray}{0.9}

\setlist[enumerate,itemize]{leftmargin=1.2cm} %отступ в перечислениях

\hypersetup{colorlinks,
	allcolors=[RGB]{010 090 200}} %красивые гиперссылки (не красные)

\begin{document}

		% НАЧАЛО ТИТУЛЬНОГО ЛИСТА
	\begin{center}
		\hfill \break
		\hfill \break
		\normalsize{МИНИСТЕРСТВО НАУКИ И ВЫСШЕГО ОБРАЗОВАНИЯ РОССИЙСКОЙ ФЕДЕРАЦИИ\\
			федеральное государственное автономное образовательное учреждение высшего образования «Санкт-Петербургский политехнический университет Петра Великого»\\[10pt]}
		\normalsize{Институт компьютерных наук и кибербезопасности}\\[10pt] 
		\normalsize{Высшая школа технологий искусственного интеллекта}\\[10pt] 
		\normalsize{Направление: 02.03.01 <<Математика и компьютерные науки>>}\\
		
		\hfill \break
		\hfill \break
		\hfill \break
		\hfill \break
		\large{Отчет о выполнении курсовой работы \textit{Синтез функциональной схемы часов} по дисциплине}\\
		\large{<<Теория алгоритмов>>}\\
		\large{2 вариант}\\
		\hfill \break
		\hfill \break
		\hfill \break
		
		\hfill \break
		\hfill \break
	\end{center}
	
	\small{ 
		\begin{tabular}{lrrl}
			\!\!\!Студент, & \hspace{2cm} & & \\
			\!\!\!группы 5130201/20101 & \hspace{2cm} & \underline{\hspace{3cm}} &Астафьев И. Е. \\\\
			\!\!\!Преподаватель & \hspace{2cm} &  \underline{\hspace{3cm}} &  Востров А. В.\\\\
			&&\hspace{5cm}
		\end{tabular}
		\begin{flushright}
			<<\underline{\hspace{1cm}}>>\underline{\hspace{2.5cm}} 2024г.
		\end{flushright}
	}
	
	\hfill \break
	\begin{center} \small{Санкт-Петербург, 2024} \end{center}
	\thispagestyle{empty} % выключаем отображение номера для этой страницы
	
	% КОНЕЦ ТИТУЛЬНОГО ЛИСТА
	\newpage
	
	\tableofcontents
	
	\newpage

\section*{Введение}
	\addcontentsline{toc}{section}{Введение}
	
Методология проектирования дискретных систем управления, базирующаяся на использовании конечных автоматов, играет ключевую роль в современной технике. Конечные автоматы предоставляют мощный инструмент для описания поведения сложных систем, позволяя моделировать их функционирование с учетом внешних событий и условий. В условиях широкого внедрения микропроцессорной техники этот подход становится особенно актуальным благодаря своей универсальности и высокой степени формализации.

Целью данной курсовой работы было создание функциональной схемы электронных часов с использованием конечных автоматов и моделирование работы построенной схемы. Такой подход позволил детально описать логику работы устройства, учитывая все возможные состояния и переходы между ними. Данная работа демонстрирует практическое применение теории конечных автоматов в области создания систем реального времени.

	
	\newpage
	\section{Постановка задачи}
	
	Для выполнения курсовой работы по заданному варианту (0 0 1 2 2 1 0), необходимо разработать функциональную схему электронных часов, которая будет включать следующие функции:

\begin{enumerate}
\item Отображение и корректировка: часы должны отображать и позволять корректировку стандартных значений – минут и часов.
\item Режим работы: часы должны работать в 12-часовом формате с индикацией a.m./p.m.
\item Отключение индикаторов: должно быть реализовано.
\item Останов часов: останов должен осуществляться после корректировки текущего времени.
\item Секундомер: должен присутствовать фиксацией накопленного времени и возможностью продолжения отсчета секундомера.
\item Звуковая сигнализация: каждый час должна подаваться звуковая сигнализация длительностью четыре секунды.
\end{enumerate}

	\newpage
	
	\section{Описание объекта управления}

	Реализуемые электронные часы отображают часы, минуты и a.m./p.m., а также содержат индикатор звука и внешние кнопки управления $a$ и $b$.

Для отображения работы часов используются:
\begin{enumerate}
    \item 5 семисегментных дисплеев:
        \begin{itemize}
        	\item буква a или p в зависимости от соответствующей половины дня;
            \item старший десятичный разряд часов;
            \item младший десятичный разряд часов;
            \item старший десятичный разряд минут;
            \item младший десятичный разряд минут;
            \item десятичный номер состояния;
        \end{itemize}
    \item Диод, отвечающий за индикатор звука.
\end{enumerate}

Для управления часами используются кнопки внешнего управления - $a$ и $b$. Входные воздействия на часы возможны нажатием одной из кнопок или их обеих одновременно.
	
	\newpage
	
	\section{Математическое описание}
	
	\subsection{Конечный автомат}
	
	Конечный автомат \cite{lit0}, \cite{lit1} — математическая модель дискретного устройства, которая описывается набором $A = (S, \Sigma, Y, s_0, \delta, \lambda)$, где:

\begin{itemize}
    \item $S$ — конечное множество состояний;
    \item $\Sigma$ — конечное множество входных сигналов;
    \item $Y$ — конечное множество выходных сигналов;
    \item $s_0$ — начальное состояние ($s_0 \in S$);
    \item $\delta: S \times \Sigma \to S$ — функция переходов;
    \item $\lambda: S \times \Sigma \to Y$ — функция выходов.
\end{itemize}

Конечный автомат работает в дискретные моменты времени, и в момент времени $t = 0$ автомат всегда находится в состоянии $s_0$.
	
	\subsection{Построение управляющего конечного автомата}
	
	\subsubsection*{Граф управляющего конечного автомата}
	
	На Рис. \ref{graph} представлен граф управляющего конечного автомата электронных часов.
	
		\captionsetup{justification=centering}
	\begin{figure}[H]
		\centering
		\includesvg[width=\linewidth]{watches_automata}
		\caption{Граф автомата, описывающего поведение электронных часов}
		\label{graph}
	\end{figure}
	
	\subsubsection*{Состояния}
	
	Было выделено 9 состояний $S = \{s0, s1, s2, s3, s4, s5, s6, s7, s8\}$.

\begin{itemize}
    \item $s0$: \textbf{Отображение текущего времени.}  
    Это начальное состояние автомата, в котором отображается текущее время. 
    При нажатии кнопки "b" происходит переход в состояние $s5$ (индикаторы отключены). 
    Нажатие кнопок "a", "ab" переводит в соответствующие состояния настройки или остановки часов.

    \item $s1$: \textbf{Корректировка минут.}  
    В этом состоянии происходит изменение значения минут. Нажатие кнопки "a" увеличивает значение минут на единицу, 
    при этом индикаторы продолжают показывать текущие часы и минуты с учётом корректировок. 
    Переход на "b" остаётся в том же состоянии, а на "ab" переводит обратно в состояние $s0$.

    \item $s2$: \textbf{Корректировка часов.}  
    В данном состоянии корректируются значения часов. Нажатие кнопки "a" увеличивает значение часов на единицу. 
    При нажатии "b" происходит переход в состояние $s1$ (корректировка минут), а на "ab" — возврат в $s0$.

    \item $s3$: \textbf{Корректировка времени суток (AM/PM).}  
    В этом состоянии можно изменить время суток. Нажатие кнопки "a" переключает состояние между AM и PM. 
    Переход "b" переводит в состояние $s2$ (корректировка часов), а "ab" — в состояние $s0$.

    \item $s4$: \textbf{Остановка часов.}  
    В данном состоянии часы прекращают ход. Нажатие кнопки "b" возвращает в состояние $s0$ (отображение текущего времени), 
    "a" или "ab" не изменяют состояния.

    \item $s5$: \textbf{Отключение индикаторов.}  
    В этом состоянии все индикаторы отключены для экономии энергии. Нажатие кнопки "a" включает индикаторы, возвращая в состояние $s0$. 
    При нажатии "b" или "ab" состояние остаётся неизменным.

    \item $s6$: \textbf{Секундомер на паузе.}  
    В этом состоянии секундомер приостановлен. Нажатие кнопки "a" возобновляет отсчёт секунд, переходя в состояние $s7$ 
    (счёт секундомера), нажатие "b" переводит в состояние $s8$, а "ab" возвращает в $s0$.

    \item $s7$: \textbf{Счёт секундомера.}  
    В этом состоянии секундомер отсчитывает время. Нажатие кнопки "b" переводит секундомер в паузу (состояние $s6$), 
    а "ab" сбрасывает отсчёт и возвращает в $s0$.

    \item $s8$: \textbf{Секундомер остановлен.}  
    Секундомер полностью остановлен. Нажатие кнопки "b" возвращает в состояние $s6$ (пауза секундомера), 
    а "ab" сбрасывает отсчёт секундомера и возвращает в $s0$.
\end{itemize}

	В Таблице \ref{table:states} приведены коды, необходимые для реализации состояний:
	
	\begin{table}[H]
	\caption{Коды состояний}
	\label{table:states}
	\begin{center}
		\begin{tabular}{|l|c|}
			\hline
			Состояние & Код \\ 
			\hline
			$ s0 $ &  0000\\ 
			$ s1 $ &  0001\\ 
			$ s2 $ &  0010\\
			$ s3 $ &  0011\\
			$ s4 $ &  0100\\			
			$ s5 $ &  0101\\
			$ s6 $ &  0110\\ 
           $ s7 $ &  0111\\ 
           $ s8 $ &  1000\\			
			\hline
		\end{tabular}
	\end{center}
	\end{table}
	
	\subsubsection*{Входы}
	
Входной алфавит был определен как $ \Sigma = \{a, b, ab\}$:

	\begin{itemize}
	\item Кнопка \textbf{a}. 
	\item Кнопка \textbf{b}. 
	\item Одновременное нажатие кнопок \textbf{ab}.
	\end{itemize}
	
В Таблице \ref{table:inputs} приведены коды, необходимые для реализации входов:
	
	\begin{table}[H]
	\caption{Коды входов}
	\label{table:inputs}
	\begin{center}
		\begin{tabular}{|l|c|}
			\hline
			Вход & Код \\ 
			\hline
			$ a $ &  00\\ 
			$ b $ &  10\\ 
			$ ab $ & 11\\	
			\hline
		\end{tabular}
	\end{center}
	\end{table}
	
	\subsubsection*{Выходы}
	
	\label{sec:outs}
	
	Было выделено множество выходных сигналов $ Y = \{z_1, z_2, z_3, z_4, z_5, z_6, z_7, z_8\}$.
	
	\begin{itemize}
    \item $z1$: \textbf{Увеличение минуты на 1.}  
    Этот выход используется для увеличения значения минут на единицу при корректировке времени. 
    Он активируется в состоянии $s1$ (корректировка минут) при нажатии соответствующей кнопки.

    \item $z2$: \textbf{Увеличение часа на 1.}  
    Этот выход увеличивает значение часов на единицу. Он активируется в состоянии $s2$ (корректировка часов) 
    при корректировке времени.

    \item $z3$: \textbf{Переключение режима AM/PM.}  
    Данный выход используется для изменения режима времени суток. Он активируется в состоянии $s3$ (корректировка времени суток) 
    при выполнении соответствующего действия.

    \item $z4$: \textbf{Переключение режима индикаторов.}  
    Этот выход отвечает за включение или выключение индикаторов часов. Он активируется в состояниях, связанных с переключением 
    индикаторного отображения, таких как $s0$ (отображение текущего времени) или $s5$ (отключение индикаторов).

    \item $z5$: \textbf{Запуск/пауза счётчика секундомера.}  
    Данный выход используется для управления работой секундомера. Он активируется в состоянии $s6$ (секундомер на паузе) 
    для запуска или временной остановки отсчёта.

    \item $z6$: \textbf{Сброс счётчика секундомера.}  
    Этот выход позволяет сбросить значение секундомера. Он активируется в состоянии $s8$ (секундомер остановлен) 
    или $s7$ (счёт секундомера) при соответствующем действии.

    \item $z7$: \textbf{Старт/стоп часов.}  
    Этот выход управляет запуском или остановкой хода часов. Он активируется в состояниях, связанных с режимами работы часов, 
    таких как $s4$ (остановка часов).

    \item $z8$: \textbf{Пустой выход.}  
    Этот выход не выполняет никаких действий и используется как заглушка в тех состояниях, где не требуется выполнение 
    дополнительных операций.
\end{itemize}

\subsubsection*{Функции переходов состояний и выходов}

В таблицах \ref{tab1} - \ref{tab2} отображены функция переходов автомата ($ \delta $) и функция выходов автомата ($ \lambda $) соответственно.
	
	\begin{figure}[H]
		\begin{minipage}[h]{0.47\linewidth}
			\center{\begin{table}[H]
					\caption{Таблица переходов состояний графа}
					\label{tab1}
					\begin{center}
					 \begin{tabular}{|c||c|c|c|}
					 	\hline
					 	$ \delta $ & a & b & ab \\
					 	\hline
					 	$s0$ & $s1$ & $s5$ & $s6$\\
					 	$s1$ & $s2$ & $s1$ & $s2$\\
					 	$s2$ & $s3$ & $s2$ & $s3$\\
					 	$s3$ & $s4$ & $s3$ & $s4$\\
					 	$s4$ & $s0$ & $s0$ & $s0$ \\
					 	$s5$ & $s0$ & $s0$ & $s0$\\
					 	$s6$ & $s7$ & $s8$ & $s0$\\
                       $s7$ & $s6$ & $s8$ & $s0$\\
                       $s8$ & $s7$ & $s8$ & $s0$\\                        
					 	\hline
					 \end{tabular}	
					\end{center}
			\end{table}} 	
		\end{minipage}
		\hfill
		\begin{minipage}[h]{0.47\linewidth}
			\center{\begin{table}[H]
				\caption{Таблица выходов графа}
					\label{tab2}
					\begin{center}
						\begin{tabular}{|c||c|c|c|}
							\hline
							$\lambda$ & a & b & ab \\
							\hline
							$s0$ & $z8$ & $z4$ & $z8$\\
							$s1$ & $z8$ & $z1$ & $z8$\\
							$s2$ & $z8$ & $z2$ & $z8$\\
							$s3$ & $z7$ & $z3$ & $z7$\\
							$s4$ & $z7$ & $z7$ & $z7$ \\
							$s5$ & $z4$ & $z4$ & $z4$\\
							$s6$ & $z5$ & $z6$ & $z8$\\
       						$s7$ & $z5$ & $z6$ & $z8$\\
       						$s8$ & $z5$ & $z6$ & $z8$\\
							\hline
						\end{tabular}	
					\end{center}
			\end{table}}
		\end{minipage}
	\end{figure}
	
	\subsection{Управляющие воздействия}
	
	\subsubsection*{Импульсные микрокоманды}
	
	Импульсные микрокоманды - это кратковременные воздействия, которые подаются в момент нажатия внешних кнопок \cite{lit2}. Значение импульсной микрокоманды (кратковременное воздействие) может быть отлично от нуля лишь во время перехода из одного состояния в другое.
	
	Импульсные микрокоманды описаны в Таблице \ref{table:impulse}.
	
	\begin{table}[H]
	\caption{Коды состояний}
	\label{table:impulse}
	\begin{center}
		\begin{tabular}{|l|c|}
			\hline
			Импульсная микрокоманда & Описание \\ 
			\hline
			$ i1 $ & увеличить минуты на 1 \\ 
			$ i2 $ & увеличить часы на 1 \\ 
			$ i3 $ & переключить a.m./p.m \\	
			$ i4 $ & переключить режим индикаторов вкл./выкл. \\
			$ i5 $ & запустить/поставить на паузу секундомер  \\
			$ i6 $ & сбросить секундомер \\
			$ i7 $ & переключить режим останова часов вкл./выкл. \\
			$ i8 $ & переключить режим сигнализации вкл./выкл. \\
			\hline
		\end{tabular}
	\end{center}
	\end{table}
	
	
	\subsubsection*{Потенциальные микрокоманды}
	
	Потенциальные микрокоманды - это продолжительное воздействие, которое действует в период нахождения автомата в определенном состоянии и может измениться только при переключении автомата в другое состояние \cite{lit2}.
	
	Потенциальные микрокоманды описаны в Таблице \ref{table:potential}.
	
	\begin{table}[H]
	\caption{Коды состояний}
	\label{table:potential}
	\begin{center}
		\begin{tabular}{|l|c|}
			\hline
			Потенциальная микрокоманда & Описание \\ 
			\hline
			$ L1 $ & корректировка минут \\ 
			$ L2 $ & корректировка часов \\ 
			$ L3 $ & корректировка a.m./p.m \\	
			$ L4 $ & останов часов \\
			$ L5 $ & секундомер \\
			$ L6 $ & индикация отключена \\
			$ L7 $ & сигнализация \\
			\hline
		\end{tabular}
	\end{center}
	\end{table}
	
	\subsection{Минимизация функций}
	
	\subsubsection*{Функция SOPform}
	
	Функция \texttt{SOPform} из библиотеки \texttt{sympy.logic} \cite{lit3} языка программирования Python используется для представления логической функции в СДНФ (Sum of Products, SOP). Она преобразует список минтермов (входных комбинаций, приводящих к результату \texttt{1}) в упрощённое выражение, используя алгоритм минимизации логических функций.
	
\begin{minted}[
	frame=lines,
	framesep=2mm,
	baselinestretch=1.2,
	bgcolor=LightGray,
	fontsize=\footnotesize,
	linenos,
	breaklines
	]{python}
sympy.logic.boolalg.SOPform(variables, minterms, dontcares=None)
\end{minted}

\textbf{Основной принцип работы}

Функция \texttt{SOPform} применяет алгоритм Куайна - Мак-Класки \cite{lit4}. Он работает путем анализа всех возможных минтермов (входных комбинаций, которые приводят к результату "1") и их объединения в группы, где можно устранить одинаковые части. Алгоритм поочередно объединяет минтермы, если они отличаются только в одном бите, и повторяет этот процесс до тех пор, пока не будет получено минимальное количество выражений, представляющих ту же функцию.

Результат представлен в виде логической функции \texttt{Or} (логическое \textit{или}), которая соответствует минимальной форме суммы произведений.

\textbf{Входные параметры}

\begin{enumerate}
    \item \textbf{Переменные:} список символьных переменных, задающих логическую функцию. Они передаются как первый аргумент.
    \item \textbf{Минтермы:} список всех входных комбинаций, приводящих к результату \texttt{1}. Минтермы могут быть переданы в следующих форматах:
    \begin{itemize}
        \item В виде списка списков (например, \texttt{[[0, 0, 0, 1], [0, 1, 1, 1]]}).
        \item В виде списка целых чисел, представляющих двоичные комбинации (например, \texttt{[1, 3, 7, 15]}).
        \item В виде словарей, задающих только известные переменные (например, \texttt{\{w: 0, x: 1\}}).
    \end{itemize}
    \item \textbf{Don't-care условия (опционально):} список входных комбинаций, которые могут быть проигнорированы. Это позволяет дополнительно минимизировать функцию. Также могут быть заданы в виде списков, чисел или словарей.
\end{enumerate}

\textbf{Результат}

Функция возвращает одно из возможных минимальных логических выражений, которое удовлетворяет заданным условиям. Результат представлен в виде логических операций (\texttt{\&} для \textit{и}, \texttt{|} для \textit{или}, \texttt{\textasciitilde} для отрицания).

\subsubsection*{Функции для переходов состояний}

	Так как состояния и входы автомата закодированы, была создана таблица истинности переходов состояний (Таблица \ref{table:tblq}).

		\captionsetup{justification=centering}
	\begin{table}[H]
			\caption{Переходы состояний автомата}
		\label{table:tblq}
		\centering
		 \includegraphics[scale=1]{tbl_q.png}
	\end{table}
	
	Затем для минимизации функций для \(Q1\), \(Q2\), \(Q3\), \(Q4\) была использована функция SOPform:
	
\begin{minted}[
	frame=lines,
	framesep=2mm,
	baselinestretch=1.2,
	bgcolor=LightGray,
	fontsize=\footnotesize,
	linenos,
	breaklines
	]{python}
import pandas as pd
from sympy.logic.boolalg import SOPform
from sympy import symbols

table = pd.read_csv("table_state_to_state.csv")

columns = ['a', 'b', 'q1', 'q2', 'q3', 'q4', 'Q1', 'Q2', 'Q3', 'Q4']
result = pd.DataFrame(columns=columns)
for i in range(len(table)):
    row = table.iloc[i]
    a, b = 0, 0
    match row['X']:
        case 'a':
            a = 1
            b = 0
        case 'b':
            a = 0
            b = 1
        case 'ab':
            a = 1
            b = 1
    q1, q2, q3, q4 = states_dict[row['current state']]
    Q1, Q2, Q3, Q4 = states_dict[row['next state']]
    result.loc[len(result)] = [a, b, q1, q2, q3, q4, Q1, Q2, Q3, Q4]

a, b, q1, q2, q3, q4, Q1, Q2, Q3, Q4 = symbols('a b q1 q2 q3 q4 Q1 Q2 Q3 Q4')

inputs = [[result.iloc[i][j] for j in range(6)] for i in range(len(result))]

outputs = {
    'Q1': result['Q1'].to_list(),
    'Q2': result['Q2'].to_list(),
    'Q3': result['Q3'].to_list(),
    'Q4': result['Q4'].to_list()
}

answers = dict()
for k in outputs.keys():
    answers.update({k: SOPform([a, b, q1, q2, q3, q4], [inputs[i] for i in range(len(outputs[k])) if outputs[k][i] == 1])})
\end{minted}

Таким образом для каждого \(Q\) были получены минимизированные функции (Рис. \ref{minimal}).

	\captionsetup{justification=centering}
	\begin{figure}[H]
		\centering
		 \includegraphics[width=\linewidth]{answers_q.png}
		\caption{Минимизированные функции для $Q1$, $Q2$, $Q3$, $Q4$}
		\label{minimal}
	\end{figure}
	
	Теперь можно построить логический блок F, в котором будут описаны переходы из состояния в состояние по известному входу.
	
	\subsubsection*{Функции импульсных микрокоманд}
	
	Также была создана таблица истинности для импульсных микрокоманд, которые зависят от входа и текущего состояния автомата (Таблица \ref{table:tbli}).

		\captionsetup{justification=centering}
	\begin{table}[H]
			\caption{Зависимость импульсных микрокоманд от входов и состояний}
		\label{table:tbli}
		\centering
		 \includegraphics[scale=1]{tbl_i.png}
	\end{table}
	
	Затем для минимизации функций для \(i1\), \(i2\), \(i3\), \(i4\), $i5$, $i6$, $i7$ была использована функция SOPform:
	
\begin{minted}[
	frame=lines,
	framesep=2mm,
	baselinestretch=1.2,
	bgcolor=LightGray,
	fontsize=\footnotesize,
	linenos,
	breaklines
	]{python}
import pandas as pd
from sympy import symbols
from sympy.logic.boolalg import Or, And

data = pd.read_csv("table_is.csv")

a, b, q1, q2, q3, q4 = symbols('a b q1 q2 q3 q4')
inputs = [a, b, q1, q2, q3, q4]

output_columns = ['i1', 'i2', 'i3', 'i4', 'i5', 'i6', 'i7']

expressions = {}

for output in output_columns:
    terms = []
    for _, row in data.iterrows():
        if row[output] == 1:
            term = And(*[var if row[var.name] == 1 else ~var for var in inputs])
            terms.append(term)
    expressions[output] = Or(*terms)
\end{minted}

Таким образом для каждого \(i\) были получены минимизированные функции (Рис. \ref{minimali}).

	\captionsetup{justification=centering}
	\begin{figure}[H]
		\centering
		 \includegraphics[width=\linewidth]{answers_i.png}
		\caption{Минимизированные функции для импульсных микрокоманд}
		\label{minimali}
	\end{figure}
	
	Теперь можно дополнить логический блок F, в котором также будут описаны импульсные микрокоманды по известному входу и состоянию.
	
	\subsubsection*{Функции потенциальных микрокоманд}
	
	Также была создана таблица истинности для потенциальных микрокоманд, которые зависят от текущего состояния автомата (Таблица \ref{table:tbll}).

		\captionsetup{justification=centering}
	\begin{table}[H]
			\caption{Зависимость потенциальных микрокоманд от состояний}
		\label{table:tbll}
		\centering
		 \includegraphics[scale=1]{tbl_l.png}
	\end{table}
	
	Затем для минимизации функций для \(l1\), \(l2\), \(l3\), \(l4\), $l5$, $l6$ была использована функция SOPform:
	
\begin{minted}[
	frame=lines,
	framesep=2mm,
	baselinestretch=1.2,
	bgcolor=LightGray,
	fontsize=\footnotesize,
	linenos,
	breaklines
	]{python}
data2 = pd.read_csv("table_ls.csv")

q1, q2, q3, q4 = symbols('q1 q2 q3 q4')
inputs = [q1, q2, q3, q4]

output_columns = ['l1', 'l2', 'l3', 'l4', 'l5', 'l6']

expressions = {}

for output in output_columns:
    terms = []
    for _, row in data2.iterrows():
        if row[output] == 1:
            term = And(*[var if row[var.name] == 1 else ~var for var in inputs])
            terms.append(term)
    expressions[output] = Or(*terms)
\end{minted}

Таким образом для каждого \(l\) были получены минимизированные функции (Рис. \ref{minimall}).

	\captionsetup{justification=centering}
	\begin{figure}[H]
		\centering
		 \includegraphics[width=\linewidth]{answers_l.png}
		\caption{Минимизированные функции для потенциальных микрокоманд}
		\label{minimall}
	\end{figure}
	
	Теперь можно создать логический блок FL, в котором будут описаны потенциальные микрокоманды по известному состоянию.

	\newpage
	\section{Особенности реализации}
	
	Для реализации логической схемы используется инструмент моделирования электрических схем Logisim \cite{lit5}.
	
	Проект логической схемы электронных часов был разбит на 6 связанных между собой схем.
	
	\begin{itemize}
	\item \textbf{main} - главная схема, объединяющая в себе все остальные.
	\item \textbf{multiplexer} - схема с мультиплексером, преобразующим сигнал с счетчика в сигнал для семисегментного индикатора.
	\item \textbf{automata\_main} - схема, описывающая блок F переходов состояний и импульсных микрокоманд.
	\item \textbf{automata\_states} - схема, описывающая блок FL потенциальных микрокоманд.
	\item \textbf{stopwatch} - схема, описывающая работу секундомера.
	\item \textbf{signal} - схема, включающая сигнал.
	\end{itemize}
	
	\subsection{Схема multiplexer}
	
	Данная схема преобразует 4 битовый сигнал поступающий с счетчика в сигналы для входов 7-сегментного индикатора (Рис. \ref{mux}).
	
	\captionsetup{justification=centering}
	\begin{figure}[H]
		\centering
		 \includegraphics[width=\linewidth]{multiplexer.png}
		\caption{Схема multiplexer}
		\label{mux}
	\end{figure}
	
	Схема состоит из одного 4 битового входа, элементов И, ИЛИ, 7-сегментного индикатора для отладки и 7 битового выхода.
	
	\subsection{Схема automata\_main}
	
	Данная схема представляет блок F, она принимает сигналы поступающий с кнопок и выходов этой же схемы и возвращает новые сигналы состояний и импульсные микрокоманды (Рис. 6) согласно минимизированным функциям перехода состояний и функциям импульсных микрокоманд.
	
	\newpage
	\includepdf[fitpaper]{f.pdf}

	Схема состоит из шести 1 битовых входов, элементов И, ИЛИ, D-триггеров и одиннадцати 1 битовых выходов.
	
	\subsection{Схема automata\_states}
	\setcounter{figure}{7}
	
	Данная схема представляет блок FL, она принимает сигналы состояний и возвращает сигналы потенциальных микрокоманд (Рис. \ref{fl}) согласно минимизированным функциям потенциальных микрокоманд.
	
		\captionsetup{justification=centering}
	\begin{figure}[H]
		\centering
		 \includegraphics[scale=0.6]{fl.png}
		\caption{Схема automata\_states}
		\label{fl}
	\end{figure}
	
	Схема состоит из четырех 1 битовых входов, элементов И, ИЛИ и шести 1 битовых выходов.
	
	\subsection{Схема stopwatch}
	
	Данная схема представляет блок секундомера, она принимает сигналы разрешающего состояния, сброса, старта/паузы и генератора и возвращает четыре 4 битовых числа (Рис. \ref{sw}).
	
		\captionsetup{justification=centering}
	\begin{figure}[H]
		\centering
		 \includegraphics[scale=0.6]{sw.png}
		\caption{Схема stopwatch}
		\label{sw}
	\end{figure}
	
	Схема состоит из четырех 1 битовых входов, элементов И, ИЛИ, счетчиков, мультиплексоров, D-триггера и четырех 4 битовых выходов.
	
	\subsection{Схема signal}
	
	Данная схема представляет блок сигнализации, она принимает сигналы счетчиков секунд и минут и возвращает сигнал, когда минуты равны (00), а секунды от (00) до (04) (Рис. \ref{signal}).
	
		\captionsetup{justification=centering}
	\begin{figure}[H]
		\centering
		 \includegraphics[scale=0.6]{signal.png}
		\caption{Схема signal}
		\label{signal}
	\end{figure}
	
	Схема состоит из четырех 4 битовых входов, пяти констант, пяти компараторов, элементов И, ИЛИ и одного 1 битового выхода.
	
	\subsection{Схема main}
	
	Данная схема объединяет в себе все другие схемы (Рис. 10) и реализует полную функциональность электронных часов согласно заданию. Для отсчета времени используется один элемент тактового генератора. Тактовый генератор меняет значение на выходе по определённому расписанию. <<Такт>> - это единица времени в Logisim. По умолчанию частота тактового генератора равняется 1 Гц, что соответствует 1 секунде (1 такт в 1 секунду реального времени). Также Logisim позволяет делать частоту выше.
	
		\newpage
	\includepdf[fitpaper]{main.pdf}
	
	\subsubsection*{Основные компоненты схемы}
\begin{itemize}
    \item Верхняя часть схемы содержит систему отображения с несколькими 7-сегментными индикаторами
    \item В центре расположен блок управления с мультиплексорами (MUX)
    \item Нижняя часть содержит логику управления состояниями и сигналами
\end{itemize}

\subsubsection*{Функциональные блоки}
\textbf{Блок отображения времени}
\begin{itemize}
    \item Четыре группы 7-сегментных индикаторов для отображения часов и минут
    \item Мультиплексоры для переключения между режимами отображения
\end{itemize}

\textbf{Блок управления (automata\_main)}
\begin{itemize}
    \item Реализует логику переключения состояний
    \item Обрабатывает входные сигналы от кнопок
    \item Генерирует управляющие сигналы для других блоков
\end{itemize}

\textbf{Секундомер (stopwatch)}
\begin{itemize}
    \item Отдельный блок для функции секундомера
    \item Имеет собственные счетчики и управление
    \item Поддерживает паузу и продолжение отсчета
\end{itemize}

\textbf{Блок сигнализации (signal)}
\begin{itemize}
    \item Отслеживает время для подачи часового сигнала
    \item Генерирует 4-секундный звуковой сигнал каждый час
\end{itemize}

\subsubsection*{Управляющие сигналы}
\begin{itemize}
    \item min\_lens\_switch, sec\_lens\_switch - управление индикацией
    \item min\_units\_switch, sec\_units\_switch - переключение режимов
    \item h\_lens, h\_units - сигналы часов
    \item meridiem - индикация AM/PM для 12-часового формата
\end{itemize}

	\newpage
	\section{Расчет площади схемы}
	
	Для расчета площади необходимо оценить число транзисторов, которое потребуется для создания реальной схемы часов по построенной схеме. Используем следующую таблицу (Таблица \ref{tab:transistors}):
	
	\begin{table}[H]
\centering
\label{tab:transistors}
\caption{Количество транзисторов в элементах схемы}
\begin{tabular}{|l|c|c|c|}
\hline
Элемент & \begin{tabular}[c]{@{}c@{}}Число\\ транзисторов\end{tabular} & \begin{tabular}[c]{@{}c@{}}Число\\ элементов\end{tabular} & \begin{tabular}[c]{@{}c@{}}Всего\\ транзисторов\end{tabular} \\
\hline
Элемент НЕ & 1 & 5 & 5 \\
\hline
Элемент И & 4 & 84 & 336 \\
\hline
Элемент ИЛИ & 6 & 31 & 186 \\
\hline
Элемент Исключающее ИЛИ & 8 & 1 & 8 \\
\hline
Управляемый буфер & 6 & 20 & 120 \\
\hline
Мультиплексор & 8 & 4 & 32 \\
\hline
Компаратор & 4 & 5 & 20 \\
\hline
D триггер & 20 & 4 & 80 \\
\hline
T триггер & 20 & 2 & 40 \\
\hline
Счётчик & 64 & 10 & 640 \\
\hline
Итог & & 166 & 1467 \\
\hline
\end{tabular}
\end{table}

Для реализации схемы потребуется примерно 1467 транзистора. Производя оценку из расчета 1000 транзисторов на одном квадратном миллиметре площади кристалла, то площадь схемы примерно равна 1,47 \(mm^2\).

	\newpage
	\section*{Заключение}
	\addcontentsline{toc}{section}{Заключение}
	 
В ходе выполнения курсовой работы была разработана функциональная схема электронных часов в системе Logisim, полностью соответствующая заданным требованиям варианта (0 0 1 2 2 1 0). Реализованная схема обеспечивает следующий функционал:

\begin{itemize}
    \item Корректное отображение времени в 12-часовом формате с индикацией AM/PM, включая возможность настройки текущего времени путем корректировки часов и минут
    
    \item Реализована система управления индикацией, позволяющая отключать отображение времени при необходимости
    
    \item Внедрен механизм автоматического останова часов после выполнения корректировки времени, что обеспечивает точность настройки
    
    \item Встроен полнофункциональный секундомер с возможностью фиксации промежуточного времени и продолжения отсчета
    
    \item Добавлена система звуковой сигнализации, активирующаяся каждый час и работающая в течение четырех секунд
\end{itemize}

Разработанная схема содержит 166 логических элементов, для реализации которых требуется 1467 транзисторов. Все компоненты схемы оптимально связаны между собой, обеспечивая надежное функционирование устройства и выполнение всех поставленных задач.

Согласно Таблице \ref{table:tblq} количество использования кнопок для всего автомата одинаково. Нагрузка распределена между одиночными нажатиями и комбинированными нажатиями. В различных состояниях часов, например, в состоянии установки времени или состоянии секундомера, используются разные кнопки, что предотвращает концентрацию на одной кнопке. Из этого можно сделать вывод о том, что удалось добиться балансировки нажатия на кнопки, это позволяет сделать износ кнопок более равномерным.

\textbf{Преимущества}
\begin{itemize}
    \item Благодаря проведенной минимизации функций для блоков управления и формирования сигналов удалось оптимизированно использовать логические элементы, что снижает общую сложность схемы.
    
    \item Все блоки вынесены в отдельные схемы, что позволяет разгрузить схему main и упростить восприятие.
    
    
    \item Компактная реализация звуковой сигнализации с фиксированной длительностью сигнала.
\end{itemize}

\textbf{Недостатки}
\begin{itemize}
    \item При корректировке времени возможно только увеличение значений, что требует полного цикла прокрутки для установки меньших значений.
    
    \item При корректировке нельзя вернуться к предыдущему состоянию корректировки.
    
    \item Использование общего тактового генератора для часов и секундомера может приводить к незначительной погрешности (до 1 секунды) при работе секундомера.
    
    \item Ограниченное количество органов управления усложняет навигацию по меню и может создавать неудобства при частом использовании.
\end{itemize}

\textbf{Возможности масштабирования}
Проект может быть расширен следующими функциональными возможностями:
\begin{enumerate}
    \item Добавление отображения даты и календаря.
    
    \item Реализация переключения между 12-часовым и 24-часовым форматами отображения времени.
    
    \item Расширение функционала звуковой сигнализации:
    \begin{itemize}
        \item Настройка громкости сигнала;
        \item Выбор различных мелодий;
        \item Возможность полного отключения;
    \end{itemize}
    
    \item Добавление будильника с настраиваемым временем срабатывания.
\end{enumerate}

В результате проведенной работы создано полноценное устройство, которое может быть использовано как основа для реальной реализации электронных часов с расширенным функционалом.

	\newpage

	\addcontentsline{toc}{section}{Список используемой литературы}
	\begin{thebibliography}{5}
		\bibitem{lit0} Айзерман М. А., Гусев Л. А., Розоноэр Л. И., Смирнова И. М., Таль А. А. Логика. Автоматы. Алгоритмы. — М.: Государственное издательство физико-математической литературы, 1963. — 556 с.
		\bibitem{lit1} Хопкрофт Дж. Э., Мотвани Р., Ульман Д. Дж. Введение в теорию автоматов, языков и вычислений. 3-е изд. — Рединг: Аддисон-Уэсли, 2006 [1979]. — ISBN 0-321-45536-3.
		\bibitem{lit2} Карпов Ю. Г. Синтез дискретных устройств управления. — СПб., 1997. — 19 с.
		\bibitem{lit3} SymPy Documentation. Logic — SymPy 1.12 documentation. URL: \href{https://docs.sympy.org/latest/modules/logic.html}{https://docs.sympy.org/latest/modules/logic.html} (дата обращения: 13.12.2024).
		\bibitem{lit4} Edward, J., McCluskey. Minimization of Boolean functions // Bell System Technical Journal. 1956. Т. 35, № 6. С. 1417–1444. DOI: 10.1002/J.1538-7305.1956.TB03835.X.
		\bibitem{lit5} Logisim. URL: \href{http://www.cburch.com/logisim/ru/index.html}{http://www.cburch.com/logisim/ru/index.html} (дата обращения: 13.12.2024).
	\end{thebibliography}
	
	
	
\end{document}